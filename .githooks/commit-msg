#!/usr/bin/env bash
# Commit message hook to enforce Conventional Commits specification
# https://www.conventionalcommits.org/en/v1.0.0/

set -e

RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

COMMIT_MSG_FILE=$1
COMMIT_MSG=$(cat "$COMMIT_MSG_FILE")

# Skip merge commits and revert commits
if echo "$COMMIT_MSG" | grep -qE "^Merge|^Revert"; then
    exit 0
fi

# Conventional Commits pattern:
# <type>[optional scope]: <description>
# 
# [optional body]
#
# [optional footer(s)]
#
# Types: feat, fix, docs, style, refactor, perf, test, build, ci, chore, revert
PATTERN="^(feat|fix|docs|style|refactor|perf|test|build|ci|chore|revert)(\(.+\))?(!)?: .{1,100}"

if ! echo "$COMMIT_MSG" | head -1 | grep -qE "$PATTERN"; then
    echo -e "${RED}Invalid commit message format!${NC}"
    echo ""
    echo "Commit message must follow Conventional Commits specification:"
    echo ""
    echo -e "${GREEN}Format:${NC}"
    echo "  <type>[optional scope]: <description>"
    echo ""
    echo -e "${GREEN}Types:${NC}"
    echo "  feat:     A new feature"
    echo "  fix:      A bug fix"
    echo "  docs:     Documentation only changes"
    echo "  style:    Changes that don't affect code meaning (formatting, etc)"
    echo "  refactor: Code change that neither fixes a bug nor adds a feature"
    echo "  perf:     Code change that improves performance"
    echo "  test:     Adding or correcting tests"
    echo "  build:    Changes to build system or dependencies"
    echo "  ci:       Changes to CI configuration files and scripts"
    echo "  chore:    Other changes that don't modify src or test files"
    echo "  revert:   Reverts a previous commit"
    echo ""
    echo -e "${GREEN}Examples:${NC}"
    echo "  feat: add user authentication"
    echo "  feat(vault): enable UI in Vault configuration"
    echo "  fix: resolve PVC binding issue with StorageClass"
    echo "  docs: update README with deployment steps"
    echo "  chore!: drop support for Vault 1.10"
    echo ""
    echo -e "${YELLOW}Your commit message:${NC}"
    echo "$COMMIT_MSG" | head -1
    echo ""
    echo "See: https://www.conventionalcommits.org/en/v1.0.0/"
    exit 1
fi

# Check subject line length
SUBJECT=$(echo "$COMMIT_MSG" | head -1)
SUBJECT_LENGTH=${#SUBJECT}
if [ "$SUBJECT_LENGTH" -gt 100 ]; then
    echo -e "${YELLOW}Warning: Subject line is ${SUBJECT_LENGTH} characters (max recommended: 100)${NC}"
fi

# Check for imperative mood (common mistakes)
if echo "$SUBJECT" | grep -qE ": (adds|added|adding|fixes|fixed|fixing|updates|updated|updating) "; then
    echo -e "${YELLOW}Warning: Use imperative mood in subject line (e.g., 'add' not 'added', 'fix' not 'fixed')${NC}"
fi

echo "Commit message format is valid"
exit 0
