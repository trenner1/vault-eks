#!/usr/bin/env bash
# Pre-commit hook to prevent committing sensitive information

set -e

RED='\033[0;31m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

echo "Running pre-commit security checks..."

# Patterns to search for sensitive data
PATTERNS=(
    "password\s*=\s*['\"].*['\"]"
    "api[_-]?key\s*=\s*['\"].*['\"]"
    "secret[_-]?key\s*=\s*['\"].*['\"]"
    "access[_-]?key\s*=\s*['\"].*['\"]"
    "AKIA[0-9A-Z]{16}"  # AWS Access Key
    "hvs\.[a-zA-Z0-9]{20,}"  # Vault tokens
    "xox[pboa]-[0-9]{10,}-[0-9]{10,}-[0-9a-zA-Z]{24,}"  # Slack tokens
    "sk-[a-zA-Z0-9]{20,}"  # OpenAI API keys
    "ghp_[a-zA-Z0-9]{36}"  # GitHub Personal Access Token
    "gho_[a-zA-Z0-9]{36}"  # GitHub OAuth Token
)

# Files to exclude from checking
EXCLUDE_PATTERNS="secrets.txt|\.hclic$|\.git/"

FOUND_SECRETS=0

# Get list of staged files
STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACM | grep -Ev "$EXCLUDE_PATTERNS" || true)

if [ -z "$STAGED_FILES" ]; then
    echo "No files to check."
    exit 0
fi

for FILE in $STAGED_FILES; do
    if [ -f "$FILE" ]; then
        for PATTERN in "${PATTERNS[@]}"; do
            MATCHES=$(git diff --cached "$FILE" | grep -E "^\+.*$PATTERN" || true)
            if [ -n "$MATCHES" ]; then
                echo -e "${RED}[SECURITY] Potential secret found in $FILE:${NC}"
                echo "$MATCHES"
                FOUND_SECRETS=1
            fi
        done
    fi
done

# Check for large files that might be binaries or archives
for FILE in $STAGED_FILES; do
    if [ -f "$FILE" ]; then
        SIZE=$(wc -c < "$FILE")
        if [ "$SIZE" -gt 1048576 ]; then  # 1MB
            echo -e "${YELLOW}[WARNING] Large file detected: $FILE ($(($SIZE / 1024))KB)${NC}"
            echo "Consider using Git LFS for large files."
        fi
    fi
done

if [ $FOUND_SECRETS -eq 1 ]; then
    echo -e "${RED}Commit aborted: Potential secrets detected!${NC}"
    echo "If these are false positives, you can:"
    echo "1. Add the file to .gitignore"
    echo "2. Use git commit --no-verify (not recommended)"
    exit 1
fi

echo "âœ“ Security checks passed"
exit 0
